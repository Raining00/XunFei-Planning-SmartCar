// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: informed_rrt_star_config.proto

#ifndef PROTOBUF_informed_5frrt_5fstar_5fconfig_2eproto__INCLUDED
#define PROTOBUF_informed_5frrt_5fstar_5fconfig_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace roborts_global_planner {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_informed_5frrt_5fstar_5fconfig_2eproto();
void protobuf_AssignDesc_informed_5frrt_5fstar_5fconfig_2eproto();
void protobuf_ShutdownFile_informed_5frrt_5fstar_5fconfig_2eproto();

class InformedRRTStarConfig;

// ===================================================================

class InformedRRTStarConfig : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:roborts_global_planner.InformedRRTStarConfig) */ {
 public:
  InformedRRTStarConfig();
  virtual ~InformedRRTStarConfig();

  InformedRRTStarConfig(const InformedRRTStarConfig& from);

  inline InformedRRTStarConfig& operator=(const InformedRRTStarConfig& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const InformedRRTStarConfig& default_instance();

  void Swap(InformedRRTStarConfig* other);

  // implements Message ----------------------------------------------

  inline InformedRRTStarConfig* New() const { return New(NULL); }

  InformedRRTStarConfig* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const InformedRRTStarConfig& from);
  void MergeFrom(const InformedRRTStarConfig& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(InformedRRTStarConfig* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 inaccessible_cost = 1 [default = 253];
  bool has_inaccessible_cost() const;
  void clear_inaccessible_cost();
  static const int kInaccessibleCostFieldNumber = 1;
  ::google::protobuf::uint32 inaccessible_cost() const;
  void set_inaccessible_cost(::google::protobuf::uint32 value);

  // optional float heuristic_factor = 2 [default = 1];
  bool has_heuristic_factor() const;
  void clear_heuristic_factor();
  static const int kHeuristicFactorFieldNumber = 2;
  float heuristic_factor() const;
  void set_heuristic_factor(float value);

  // optional float goal_search_tolerance = 3 [default = 0.25];
  bool has_goal_search_tolerance() const;
  void clear_goal_search_tolerance();
  static const int kGoalSearchToleranceFieldNumber = 3;
  float goal_search_tolerance() const;
  void set_goal_search_tolerance(float value);

  // optional float dis_threshold = 4 [default = 0.2];
  bool has_dis_threshold() const;
  void clear_dis_threshold();
  static const int kDisThresholdFieldNumber = 4;
  float dis_threshold() const;
  void set_dis_threshold(float value);

  // @@protoc_insertion_point(class_scope:roborts_global_planner.InformedRRTStarConfig)
 private:
  inline void set_has_inaccessible_cost();
  inline void clear_has_inaccessible_cost();
  inline void set_has_heuristic_factor();
  inline void clear_has_heuristic_factor();
  inline void set_has_goal_search_tolerance();
  inline void clear_has_goal_search_tolerance();
  inline void set_has_dis_threshold();
  inline void clear_has_dis_threshold();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 inaccessible_cost_;
  float heuristic_factor_;
  float goal_search_tolerance_;
  float dis_threshold_;
  friend void  protobuf_AddDesc_informed_5frrt_5fstar_5fconfig_2eproto();
  friend void protobuf_AssignDesc_informed_5frrt_5fstar_5fconfig_2eproto();
  friend void protobuf_ShutdownFile_informed_5frrt_5fstar_5fconfig_2eproto();

  void InitAsDefaultInstance();
  static InformedRRTStarConfig* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// InformedRRTStarConfig

// optional uint32 inaccessible_cost = 1 [default = 253];
inline bool InformedRRTStarConfig::has_inaccessible_cost() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void InformedRRTStarConfig::set_has_inaccessible_cost() {
  _has_bits_[0] |= 0x00000001u;
}
inline void InformedRRTStarConfig::clear_has_inaccessible_cost() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void InformedRRTStarConfig::clear_inaccessible_cost() {
  inaccessible_cost_ = 253u;
  clear_has_inaccessible_cost();
}
inline ::google::protobuf::uint32 InformedRRTStarConfig::inaccessible_cost() const {
  // @@protoc_insertion_point(field_get:roborts_global_planner.InformedRRTStarConfig.inaccessible_cost)
  return inaccessible_cost_;
}
inline void InformedRRTStarConfig::set_inaccessible_cost(::google::protobuf::uint32 value) {
  set_has_inaccessible_cost();
  inaccessible_cost_ = value;
  // @@protoc_insertion_point(field_set:roborts_global_planner.InformedRRTStarConfig.inaccessible_cost)
}

// optional float heuristic_factor = 2 [default = 1];
inline bool InformedRRTStarConfig::has_heuristic_factor() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void InformedRRTStarConfig::set_has_heuristic_factor() {
  _has_bits_[0] |= 0x00000002u;
}
inline void InformedRRTStarConfig::clear_has_heuristic_factor() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void InformedRRTStarConfig::clear_heuristic_factor() {
  heuristic_factor_ = 1;
  clear_has_heuristic_factor();
}
inline float InformedRRTStarConfig::heuristic_factor() const {
  // @@protoc_insertion_point(field_get:roborts_global_planner.InformedRRTStarConfig.heuristic_factor)
  return heuristic_factor_;
}
inline void InformedRRTStarConfig::set_heuristic_factor(float value) {
  set_has_heuristic_factor();
  heuristic_factor_ = value;
  // @@protoc_insertion_point(field_set:roborts_global_planner.InformedRRTStarConfig.heuristic_factor)
}

// optional float goal_search_tolerance = 3 [default = 0.25];
inline bool InformedRRTStarConfig::has_goal_search_tolerance() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void InformedRRTStarConfig::set_has_goal_search_tolerance() {
  _has_bits_[0] |= 0x00000004u;
}
inline void InformedRRTStarConfig::clear_has_goal_search_tolerance() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void InformedRRTStarConfig::clear_goal_search_tolerance() {
  goal_search_tolerance_ = 0.25f;
  clear_has_goal_search_tolerance();
}
inline float InformedRRTStarConfig::goal_search_tolerance() const {
  // @@protoc_insertion_point(field_get:roborts_global_planner.InformedRRTStarConfig.goal_search_tolerance)
  return goal_search_tolerance_;
}
inline void InformedRRTStarConfig::set_goal_search_tolerance(float value) {
  set_has_goal_search_tolerance();
  goal_search_tolerance_ = value;
  // @@protoc_insertion_point(field_set:roborts_global_planner.InformedRRTStarConfig.goal_search_tolerance)
}

// optional float dis_threshold = 4 [default = 0.2];
inline bool InformedRRTStarConfig::has_dis_threshold() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void InformedRRTStarConfig::set_has_dis_threshold() {
  _has_bits_[0] |= 0x00000008u;
}
inline void InformedRRTStarConfig::clear_has_dis_threshold() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void InformedRRTStarConfig::clear_dis_threshold() {
  dis_threshold_ = 0.2f;
  clear_has_dis_threshold();
}
inline float InformedRRTStarConfig::dis_threshold() const {
  // @@protoc_insertion_point(field_get:roborts_global_planner.InformedRRTStarConfig.dis_threshold)
  return dis_threshold_;
}
inline void InformedRRTStarConfig::set_dis_threshold(float value) {
  set_has_dis_threshold();
  dis_threshold_ = value;
  // @@protoc_insertion_point(field_set:roborts_global_planner.InformedRRTStarConfig.dis_threshold)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace roborts_global_planner

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_informed_5frrt_5fstar_5fconfig_2eproto__INCLUDED
